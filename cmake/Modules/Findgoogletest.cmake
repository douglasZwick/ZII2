include(FindPackageHandleStandardArgs)

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  set(GOOGLETEST_ARCH_SUFFIX x64)
else()
  set(GOOGLETEST_ARCH_SUFFIX x86)
endif()

set(GOOGLETEST_SEARCH_PATHS
  ~/Library/Frameworks
  /Library/Frameworks
  /usr/local
  /usr
  ${GOOGLETEST_PATH}
)

set(GOOGLETEST_INCLUDE_SUFFIXES
  include
  include/googletest
  googletest
  googletest/include
)

set(GOOGLETEST_LIBRARY_SUFFIXES
  lib/${GOOGLETEST_ARCH_SUFFIX}
  lib/googletest/${GOOGLETEST_ARCH_SUFFIX}
  googletest/lib/${GOOGLETEST_ARCH_SUFFIX}
  lib
)

find_path(
  GOOGLETEST_INCLUDE_DIR
  NAMES
    gtest/gtest.h
  HINTS
    $ENV{GOOGLETESTDIR}
  PATH_SUFFIXES
    ${GOOGLETEST_INCLUDE_SUFFIXES}
  PATHS
    ${GOOGLETEST_SEARCH_PATHS}
)

find_package(Threads)

find_library(
  GTEST_LIBRARY_RELEASE
  NAMES
    gtest
  HINTS
    $ENV{GTESTDIR}
  PATH_SUFFIXES
    ${GOOGLETEST_LIBRARY_SUFFIXES}
  PATHS
    ${GOOGLETEST_SEARCH_PATHS}
)

find_library(
  GTEST_MAIN_LIBRARY_RELEASE
  NAMES
    gtest_main
  HINTS
    $ENV{GTESTDIR}
  PATH_SUFFIXES
    ${GOOGLETEST_LIBRARY_SUFFIXES}
  PATHS
    ${GOOGLETEST_SEARCH_PATHS}
)

find_library(
  GTEST_LIBRARY_DEBUG
  NAMES
    gtestd
  HINTS
    $ENV{GTESTDIR}
  PATH_SUFFIXES
    ${GOOGLETEST_LIBRARY_SUFFIXES}
  PATHS
    ${GOOGLETEST_SEARCH_PATHS}
)

find_library(
  GTEST_MAIN_LIBRARY_DEBUG
  NAMES
    gtest_maind
  HINTS
    $ENV{GTESTDIR}
  PATH_SUFFIXES
    ${GOOGLETEST_LIBRARY_SUFFIXES}
  PATHS
    ${GOOGLETEST_SEARCH_PATHS}
)

set(GOOGLETEST_LIBRARIES_RELEASE
  ${GTEST_LIBRARY_RELEASE}
  ${GTEST_MAIN_LIBRARY_RELEASE}
)

set(GOOGLETEST_LIBRARIES_DEBUG
  ${GTEST_LIBRARY_DEBUG}
  ${GTEST_MAIN_LIBRARY_DEBUG}
)

find_package_handle_standard_args(
  GOOGLETEST
  REQUIRED_VARS
    GOOGLETEST_LIBRARIES_RELEASE
    GOOGLETEST_LIBRARIES_DEBUG
    GOOGLETEST_INCLUDE_DIR
)
